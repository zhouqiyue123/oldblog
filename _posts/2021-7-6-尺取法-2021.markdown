---
layout:     post
title:      "模拟神器——尺取法的使用"
subtitle:   "O(n^3)->O(n^2)->O(nlogn)->O(n)"
date:       2021-07-06 
author:     "周琪岳"
header-style: text
catalog: false
tags:
    - 45CSP-J集训队
    - 模拟
    - 尺取法
    - 卡常
---
# 问题模型
已知一个正整数序列a(0<ai<=1e4)，长度为n（n<=1e5）,从其中取出一段连续子序列，满足子序列之和不小于s(0<s<1e8),求子序列的最小长度为多少

# 方法一：纯暴力
按部就班直接模拟
```c++
for(int i=1; i<=n; i++) {
    for(int j=i; j<=n; j++) {
        int sum = 0;
        for(int k=1; k<=n; k++) {
            sum += a[k];
        }
        if(sum >= s)
            ans = min(ans, j-i+1);
    }
}
```
预计得分10~20分

# 方法二：前缀和+二分
采用前缀和预处理数据，可以省去求和循环，由于长度具有单调性且数据为正整数，所以可以二分长度，达到nlogn的时间复杂度
```c++
#include <iostream>

using namespace std;

const int N = 1e5 + 100;
int n, s;
int a[N], sum[N];

bool check(int x) {
	for(int i=1,j=x; j<=n; i++,j++) {
		int tmp = sum[j] - sum[i-1];
		if(tmp >= s) return true;
	}
	return false;
}

int main() {
	cin >> n >> s;
	for(int i=1; i<=n; i++) {
		cin >> a[i];
		sum[i] = sum[i-1] + a[i];
	}
	int l = 1, r = n;
	while(l < r) {
		int mid = (l + r) / 2;
		if(check(mid)) r = mid;
		else l = mid + 1; 
	}
	cout << l; 
	return 0;	
}
```
